
input
{
    beats
    {
        ssl => false
        host => "0.0.0.0"
        port => 5044
    }
    gelf
    {
        host => "0.0.0.0"
        port => 12201
    }
    http
    {
        ssl => false
        host => "0.0.0.0"
        port => 8888
    }
    tcp
    {
        mode => "server"
        host => "0.0.0.0"
        port => 5010
    }
    udp
    {
        host => "0.0.0.0"
        port => 5000
    }
    http_poller {
        urls => {
        realtime => {
        # Supports all options supported by ruby's Manticore HTTP client
        url => "https://api.goswift.ly/real-time/mta-maryland/gtfs-rt-trip-updates"
        method => get
        headers => {
           Authorization => "b20d9bc117b565f7aafdf4819668996c"
        }
     }
    }
    request_timeout => 60
    # Supports "cron", "every", "at" and "in" schedules by rufus scheduler
    schedule => { cron => "* * * * * UTC"}
   codec => protobuf
    {
      class_name => "TransitRealtime::FeedMessage"
      include_path => ['/opt/bitnami/logstash/gtfs-realtime1.pb.rb']
    }
    # A hash of request metadata info (timing, response headers, etc.) will be sent here
    metadata_target => "http_poller_metadata"
  }
}

filter {
  ruby {
    path => "/var/chop.rb"
  }
mutate {
    rename => {
        "stop_lon" => "[location][lon]"
        "stop_lat" => "[location][lat]"
    }
}
  uuid {
    target => "@uuid"
  }
}

output
{

    elasticsearch
    {
        hosts => ["127.0.0.1:9200"]
        document_id => "%{aggregate_id}"
        index => "geo-rt-trip-updates"
    }
            
}
